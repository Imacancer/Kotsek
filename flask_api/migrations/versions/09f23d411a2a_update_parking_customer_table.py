"""update parking_customer table

Revision ID: 09f23d411a2a
Revises: 248a60daa222
Create Date: 2025-05-11 13:20:38.162684

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '09f23d411a2a'
down_revision: Union[str, None] = '248a60daa222'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('incidents')
    op.add_column('parking_customers', sa.Column('address', sa.String(length=255), nullable=True))
    op.add_column('parking_customers', sa.Column('email', sa.String(length=100), nullable=True))
    op.add_column('parking_customers', sa.Column('car_model', sa.String(length=100), nullable=True))
    op.create_unique_constraint(None, 'parking_customers', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'parking_customers', type_='unique')
    op.drop_column('parking_customers', 'car_model')
    op.drop_column('parking_customers', 'email')
    op.drop_column('parking_customers', 'address')
    op.create_table('incidents',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('incident_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('time', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('details', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('vehicles', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='incidents_pkey')
    )
    # ### end Alembic commands ###
